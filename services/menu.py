# --- –°—Ç–æ—Ä–æ–Ω–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ ---
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.exceptions import TelegramBadRequest
from aiogram.utils.keyboard import InlineKeyboardBuilder

# --- –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ ---
from services.config import get_valid_config, save_config, format_config_summary
from aiogram import Bot

async def update_last_menu_message_id(user_id: int, message_id: int) -> None:
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç id –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –º–µ–Ω—é –≤ –∫–æ–Ω—Ñ–∏–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    Args:
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        message_id: ID —Å–æ–æ–±—â–µ–Ω–∏—è –º–µ–Ω—é.
    """
    config = await get_valid_config(user_id)
    config["LAST_MENU_MESSAGE_ID"] = message_id
    await save_config(config, user_id)

async def get_last_menu_message_id(user_id: int) -> int | None:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç id –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –º–µ–Ω—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    Args:
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    Returns:
        int | None: ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –º–µ–Ω—é –∏–ª–∏ None.
    """
    config = await get_valid_config(user_id)
    return config.get("LAST_MENU_MESSAGE_ID")

def config_action_keyboard(active: bool) -> InlineKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –º–µ–Ω—é —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏.

    Args:
        active: –°—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞.

    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.
    """
    toggle_text = "üî¥ –í—ã–∫–ª—é—á–∏—Ç—å" if active else "üü¢ –í–∫–ª—é—á–∏—Ç—å"
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text=toggle_text, callback_data="toggle_active"),
            InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å", callback_data="profiles_menu")
        ],
        [
            InlineKeyboardButton(text="‚ôªÔ∏è –°–±—Ä–æ—Å–∏—Ç—å", callback_data="reset_bought"),
            InlineKeyboardButton(text="‚ùì –ü–æ–º–æ—â—å", callback_data="show_help")
        ],
        [
            InlineKeyboardButton(text="üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å", callback_data="deposit_menu"),
            InlineKeyboardButton(text="‚Ü©Ô∏è –í—ã–≤–µ—Å—Ç–∏", callback_data="refund_menu")
        ],
        [
            InlineKeyboardButton(text="üéè –ö–∞—Ç–∞–ª–æ–≥ –ø–æ–¥–∞—Ä–∫–æ–≤", callback_data="catalog")
        ]
    ])

async def update_menu(bot: Bot, chat_id: int, user_id: int, message_id: int = None) -> None:
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç –º–µ–Ω—é –≤ —á–∞—Ç–µ: —É–¥–∞–ª—è–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–µ.

    Args:
        bot: –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞.
        chat_id: ID —á–∞—Ç–∞.
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        message_id: ID —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ).
    """
    config = await get_valid_config(user_id)
    await delete_menu(bot=bot, chat_id=chat_id, user_id=user_id, current_message_id=message_id)
    await send_menu(bot=bot, chat_id=chat_id, user_id=user_id, config=config, text=format_config_summary(config, user_id))

async def delete_menu(bot: Bot, chat_id: int, user_id: int, current_message_id: int = None) -> None:
    """
    –£–¥–∞–ª—è–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é, –µ—Å–ª–∏ –æ–Ω–æ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ.

    Args:
        bot: –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞.
        chat_id: ID —á–∞—Ç–∞.
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        current_message_id: ID —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ).
    """
    last_menu_message_id = await get_last_menu_message_id(user_id)
    if last_menu_message_id and last_menu_message_id != current_message_id:
        try:
            await bot.delete_message(chat_id=chat_id, message_id=last_menu_message_id)
        except TelegramBadRequest as e:
            error_text = str(e)
            if "message can't be deleted for everyone" in error_text:
                await bot.send_message(
                    chat_id,
                    "‚ö†Ô∏è –ü—Ä–µ–¥—ã–¥—É—â–µ–µ –º–µ–Ω—é —É—Å—Ç–∞—Ä–µ–ª–æ –∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —É–¥–∞–ª–µ–Ω–æ (–ø—Ä–æ—à–ª–æ –±–æ–ª–µ–µ 48 —á–∞—Å–æ–≤). –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ –º–µ–Ω—é.\n"
                )
            elif "message to delete not found" in error_text:
                pass
            else:
                raise

async def send_menu(bot: Bot, chat_id: int, user_id: int, config: dict, text: str) -> int:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–µ –º–µ–Ω—é –≤ —á–∞—Ç –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç id –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.

    Args:
        bot: –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞.
        chat_id: ID —á–∞—Ç–∞.
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        config: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        text: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –º–µ–Ω—é.

    Returns:
        int: ID –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.
    """
    sent = await bot.send_message(
        chat_id=chat_id,
        text=text,
        reply_markup=config_action_keyboard(config.get("ACTIVE"))
    )
    await update_last_menu_message_id(user_id, sent.message_id)
    return sent.message_id

def payment_keyboard(amount: int) -> InlineKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –æ–ø–ª–∞—Ç—ã –¥–ª—è –∏–Ω–≤–æ–π—Å–∞.

    Args:
        amount: –°—É–º–º–∞ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è.

    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –æ–ø–ª–∞—Ç—ã.
    """
    builder = InlineKeyboardBuilder()
    builder.button(text=f"–ü–æ–ø–æ–ª–Ω–∏—Ç—å ‚òÖ{amount:,}", pay=True)
    return builder.as_markup()